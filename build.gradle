/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'administrator' at '3/14/17 11:40 AM' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "ru.d10xa:gradle-allure-plugin:0.5.5"
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}

allprojects {
    // Apply the java plugin to add support for Java
    apply plugin: 'java'
    apply plugin: 'idea'
    task hello << { task -> println "I'm $task.project.name" }
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    defaultTasks 'clean', 'test'
}

project(':TestModule') {
    apply plugin: 'ru.d10xa.allure'

    repositories {
        jcenter()
//        mavenCentral()
    }
    configurations {
        agent
    }
    dependencies {
        compile group: 'io.appium', name: 'java-client', version: '4.1.2'
        compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '1.6.1'
        compile group: 'org.testng', name: 'testng', version: '6.11'
        agent "org.aspectj:aspectjweaver:1.8.10"
//        compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.10'
        compile group: 'ru.yandex.qatools.allure', name: 'allure-testng-adaptor', version: '1.5.2'
//        compile group: 'org.uncommons', name: 'reportng', version: '1.1.4'
    }

    test {
        useTestNG(){
            excludeGroups 'broken'
            useDefaultListeners = false
            listeners << 'report.Report'
            parallel 'classes'
            threadCount 2
        }
//        options.listeners << 'report.Report'
    }

    allure{
        aspectjweaver = true
        testNG = true
        allureResultsDir = "$buildDir/allure-results"
        allureReportDir = "$buildDir/allure-report"
    }

    task generateAllureReport(type: Exec) {
        commandLine "allure", "generate $buildDir/allure-results -o $buildDir/allure-report"
    }

    test.finalizedBy(generateAllureReport)

//    task openAllureReport(type: Exec) {
//        commandLine "allure", "report open"
//    }
}